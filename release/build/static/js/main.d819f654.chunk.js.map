{"version":3,"sources":["style/withRoot.js","components/Title.jsx","components/AppDrawer.jsx","components/AppHeader.jsx","store/MSC_Config.jsx","store/EditorConfig.jsx","components/EditorPane.jsx","util/getViewportSize.js","components/PreviewPane.jsx","components/OpenFileDialog.jsx","components/SettingsDialog.jsx","components/Splitter.jsx","components/Message.jsx","App.jsx","index.js"],"names":["theme","createMuiTheme","palette","primary","light","purple","main","dark","secondary","green","withRoot","Component","props","CssBaseline","Title","children","rest","Typography","component","variant","color","noWrap","AppDrawer","this","classes","open","onClose","onClick","Drawer","paper","clsx","drawerPaper","drawerPaperClose","className","toolbarIcon","IconButton","Divider","List","ListItem","button","event","Tooltip","title","aria-label","ListItemIcon","ListItemText","React","withStyles","position","whiteSpace","width","height","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","leavingScreen","spacing","breakpoints","up","display","alignItems","justifyContent","padding","mixins","toolbar","AppHeader","onDrawerClick","onSettingsClick","AppBar","appBar","appBarShift","Toolbar","edge","menuButton","menuButtonHidden","paddingRight","zIndex","drawer","marginLeft","marginRight","flexGrow","InputTypes","mscConfig","getStoredState","svg","Boolean","error","inputType","includes","console","log","editorConfig","editor","transpile","Error","name","value","elementId","setInputType","mirrorEntitiesOnBottom","additionalTemplate","includeSource","regularArcTextVerticalAlignment","autoRender","setConfigValue","err","localStorage","setItem","JSON","stringify","config","configStr","getItem","parse","Object","keys","forEach","key","payload","blob","Blob","type","fileName","Math","floor","Date","now","saveAs","styleAdditions","toJS","observable","action","computed","setEditor","mode","fontSize","showPrintMargin","showGutter","highlightActiveLine","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","options","savedEditor","optionsStr","ext","fileType","file","fileReader","FileReader","onloadend","e","content","result","parsePath","slice","setError","setSvg","setConfig","readAsText","outputType","setPreviewInputType","lResult","require","translateMsc","pError","EditorPane","observer","makeMarkers","location","startRow","start","line","startCol","column","endRow","end","endCol","errorMarker","onChange","onLoad","markers","wrapper","maxLines","Infinity","setOptions","defaultProps","overflow","background","getViewportSize","w","window","innerWidth","innerHeight","d","document","compatMode","documentElement","clientWidth","clientHeight","body","localRenderPreview","onError","script","getElementById","innerHTML","renderMsc","pSuccess","renderPreview","PreviewPane","svg_wrapper","boxSizing","displayError","message","startLine","Paper","handleRenderClicked","stopPropagation","errorState","id","hidden","OpenFileDialog","Dialog","aria-labelledby","DialogTitle","Button","openFile","target","files","style","NumberFormatCustom","inputRef","other","getInputRef","onValueChange","values","thousandSeparator","isNumericString","SettingsDialog","dialogContent","formControl","margin","selectFormControl","minWidth","handleChange","elType","t","checked","parseInt","scroll","DialogContent","dividers","FormControl","FormLabel","FormGroup","TextField","label","InputProps","inputComponent","InputLabel","Select","labelId","MenuItem","FormControlLabel","labelPlacement","control","Switch","inputProps","DialogActions","styles","makeStyles","splitPane","splitPaneClose","Splitter","splitPos","savedSplitPos","split","defaultSize","size","Action","Fragment","Message","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","App","handleSettingsClick","setState","settingsDialogOpen","handleSettingsClosed","handleDrawerOpen","drawerOpen","handleDrawerClose","handleSnackbarClose","reason","snackbarOpen","snackbarMsg","handleRenderError","saveEditorState","newState","handleEditorChange","handleDrawerItem","item","resetEditor","openFileDialogOpen","saveToFile","handleOpenFile","state","root","Container","container","maxHeight","top","maxWidth","ReactDOM","render"],"mappings":"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","file":"static/js/main.d819f654.chunk.js","sourcesContent":["import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: purple[300],\n            main: purple[500],\n            dark: purple[700],\n        },\n        secondary: {\n            light: green[300],\n            main: green[500],\n            dark: green[700],\n        },\n    },\n});\n\nfunction withRoot(Component) {\n    function WithRoot(props) {\n        // MuiThemeProvider makes the theme available down the React tree\n        // thanks to React context.\n        return ( <\n            MuiThemeProvider theme = { theme } > { /* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */ } <\n            CssBaseline / >\n            <\n            Component {...props }\n            /> < /\n            MuiThemeProvider >\n        );\n    }\n\n    return WithRoot;\n}\n\nexport default withRoot;","/*\n    Copyright (c) 2020 by David Skyberg\n*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\n\nexport default function Title(props) {\n  const {children, ...rest} = props\n  return (\n    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap {...rest}>\n   {children}\n  </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","/*\n    Copyright (c) 2020 by David Skyberg\n*/\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SaveIcon from '@material-ui/icons/Save'\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser'\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport const drawerWidth = 240;\n\nconst styles = theme => ({\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    height: '100%',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    height: '100%',\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n\n});\n\n\nclass AppDrawer extends React.Component {\n\n  static propTypes = {\n    open: PropTypes.bool,\n    onClose: PropTypes.func\n  }\n\n  render() {\n    const {classes, open, onClose, onClick} = this.props\n    return (\n      <Drawer variant=\"permanent\" classes={ { paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose), } } open={ open }>\n        <div className={ classes.toolbarIcon }>\n          <IconButton onClick={ onClose }>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n        <ListItem button onClick={event => onClick(event, \"reset\")}>\n          <Tooltip title=\"Reset editor to default\" aria-label=\"Reset editor to default\">\n            <ListItemIcon>\n              <ClearAllIcon />\n            </ListItemIcon>\n            </Tooltip>\n            <ListItemText primary=\"Reset Editor\" />\n          </ListItem>\n        <ListItem button onClick={event => onClick(event, \"save\")}>\n        <Tooltip title=\"Save editor and preview to file\" aria-label=\"Save editor and preview to file\">\n            <ListItemIcon>\n              <SaveIcon />\n            </ListItemIcon>\n            </Tooltip>\n            <ListItemText primary=\"Save File\" />\n          </ListItem>\n          <ListItem button onClick={event => onClick(event, \"open\")}>\n          <Tooltip title=\"Open a file into the editor\" aria-label=\"Open a file into the editor\">\n            <ListItemIcon>\n              <OpenInBrowserIcon />\n            </ListItemIcon>\n            </Tooltip>\n            <ListItemText primary=\"Open File\" />\n          </ListItem>\n         </List>\n      </Drawer>\n      );\n  }\n}\nexport default withStyles(styles)(AppDrawer)\n\n","/*\n    Copyright (c) 2020 by David Skyberg\n*/\nimport React from 'react'\nimport clsx from 'clsx'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport Tltle from './Title'\n\nimport { drawerWidth } from './AppDrawer'\n\nconst styles = theme => ({\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n});\n\nclass AppHeader extends React.Component {\n\n    render() {\n\n        const {onDrawerClick, title, onSettingsClick, classes, open} = this.props\n        return (\n\n            <AppBar position=\"fixed\" className={ clsx(classes.appBar, open && classes.appBarShift) }>\n              <Toolbar className={ classes.toolbar }>\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\" onClick={ onDrawerClick } className={ clsx(classes.menuButton, open && classes.menuButtonHidden) }>\n                  <MenuIcon />\n                </IconButton>\n                <Tltle className={ classes.title }>\n                  {title}\n                </Tltle>\n                <IconButton color=\"inherit\" onClick={onSettingsClick}>\n                  <SettingsIcon/>\n                </IconButton>\n              </Toolbar>\n            </AppBar>\n        )\n    }\n}\nexport default withStyles(styles)(AppHeader)","/*\n    Copyright (c) 2020 by David Skyberg\n*/\nimport { observable, action, computed, toJS } from \"mobx\"\nimport { saveAs } from 'file-saver'\nimport editorConfig from './EditorConfig'\n\nconst InputTypes = [\n    'msgenny',\n    'mscgen',\n    'xu',\n    'json'\n]\n\nclass MSC_Config {\n    @observable elementId = \"__svg\"\n    @observable inputType = \"xu\" // mscgen, msgenny, xu, json\n    @observable mirrorEntitiesOnBottom = true\n    @observable additionalTemplate = 'lazy' // lazy, classic, empty\n    @observable includeSource = false\n    @observable regularArcTextVerticalAlignment = 'middle' // above, middle, below\n    @observable styleAdditions = null\n    @observable autoRender = true\n    @observable error = null\n    @observable svg = null\n\n    constructor() {\n        this.getStoredState()\n    }\n\n    @action setSvg(svg) {\n        this.svg = Boolean(svg) ? svg : null\n    }\n\n    @action setError(error) {\n        this.error = Boolean(error) ? error : null\n    }\n\n    @action\n    setInputType(inputType) {\n        if(!Boolean(inputType)){\n            console.log('MSCConfig.setInputType: No value')\n            return\n        }\n        if(inputType === this.inputType) {\n            console.log('mscConfig.setInputType: no change')\n            return\n        }\n        if(InputTypes.includes(inputType)) {\n            console.log('mscConfig.setInputType: changing to', inputType)\n            if(Boolean(editorConfig) && Boolean(editorConfig.editor)){\n                editorConfig.transpile(inputType, false)\n            }\n            this.inputType = inputType\n            return\n        }\n        throw new Error(`MSC_Config.setInputType: invalid type: ${inputType}`)\n    }\n\n\n    @computed get config() {\n        const config = {\n            elementId: this.elementId,\n            inputType: this.inputType,\n            mirrorEntitiesOnBottom: this.mirrorEntitiesOnBottom,\n            additionalTemplate: this.additionalTemplate,\n            includeSource: this.includeSource,\n            regularArcTextVerticalAlignment: this.regularArcTextVerticalAlignment,\n            autoRender: this.autoRender,\n        }\n        if (this.styleAdditions !== null) {\n            config.styleAdditions = this.styleAdditions\n        }\n        return toJS(config)\n    }\n\n    @action\n    setConfigValue(name, value) {\n        switch(name) {\n            case 'elementId': this.elementId = value; break;\n            case 'inputType': this.setInputType(value); break;\n            case 'mirrorEntitiesOnBottom': this.mirrorEntitiesOnBottom = value; break;\n            case 'additionalTemplate': this.additionalTemplate = value; break;\n            case 'includeSource': this.includeSource = value; break;\n            case 'regularArcTextVerticalAlignment': this.regularArcTextVerticalAlignment = value; break;\n            case 'autoRender': this.autoRender = value; break;\n            default: console.log('Unknown value', value); throw new Error('Unknown value');\n        }\n    }\n\n    @action\n    setConfig(name, value) {\n        try {\n            this.setConfigValue(name,value)\n        } catch(err) {\n            return\n        }\n\n        localStorage.setItem('msc-config', JSON.stringify(this.config))\n    }\n\n    getStoredState() {\n        const configStr = localStorage.getItem('msc-config')\n        if(configStr !== null) {\n            const config = JSON.parse(configStr)\n            Object.keys(config).forEach(key => {\n                this.setConfigValue(key, config[key])\n            })\n        }\n    }\n\n    /**\n     * Provide the correct file extension by script type\n     */\n    fileType() {\n        // mscgen, mscgenny, xu, json\n        if(this.inputType === 'msgenny'){\n            return 'msgenny'\n        }\n        if(this.inputType === 'json') {\n            return 'json'\n        }\n        if(this.inputType === 'xu'){\n            return 'xu'\n        }\n        return 'mscgen'\n    }\n\n    /**\n     * Save the rendered SVG to a file.\n     * If a name is provided, the file is saved as `${name}.svg`\n     * If no name is provided, the current time stamp is used.\n     */\n    saveToFile(name) {\n        const payload = this.svg\n        const blob = new Blob([payload], {\n          type: \"image/svg+xml\"\n        });\n        // Save the blob to a local file\n        const fileName = Boolean(name) ? `${name}.svg` : `${Math.floor(Date.now() / 1000)}.svg`\n        saveAs(blob, fileName);\n      }\n\n}\n\nconst mscConfig = new MSC_Config()\nexport default mscConfig","/*\n    Copyright (c) 2020 by David Skyberg\n*/\nimport { observable, action, computed, toJS } from \"mobx\"\nimport { saveAs } from 'file-saver'\nimport parsePath from 'parse-filepath'\nimport mscConfig from './MSC_Config'\n\n\nexport const modes = [\n    'ABAP',\n    'ABC',\n    'ActionScript',\n    'ADA',\n    'Apache_Conf',\n    'AsciDoc',\n    'Assembly_x86',\n    'AutoHotKey',\n    'BatchFile',\n    'C9Search',\n    'C_Cpp',\n    'Cirru',\n    'Clojure',\n    'Cobol',\n    'coffee',\n    'ColdFusion',\n    'CSharp',\n    'CSS',\n    'Curly',\n    'D',\n    'Dart',\n    'Diff',\n    'Dockerfile',\n    'Dot',\n    'Dummy',\n    'DummySyntax',\n    'Eiffel',\n    'EJS',\n    'Elixir'\n]\n\nconst mscDefault = `msc {\n        # Options\n        wordwraparcs=true,\n        width=auto;\n\n        # Entities\n        a [label=\"A\"],\n        b [label=\"B\"],\n        c [label=\"C\"];\n\n        # Arcs\n        a => b [label=\"A to B\"];\n        b -> c [label=\"B to C\"];\n        c >> b [label=\"C to B\"];\n        b =>> a [label=\"B to A\"];\n        |||; // Throw in a break\n        a box a [label=\"box over A\"];\n        b rbox b [label=\"rbox over B\"];\n        c abox c [label=\"abox over C\"];\n        a note c [label=\"A note spanning A to C\"];\n\n        // alt, opt, loop, par, exc, break, seq, strict,\n        // neg, ignore, consider, and assert\n        a loop c [label=\"3 times\"]{\n         a => b [label=\"A to B\"];\n\n        };\n  }`;\n\nconst msgennyDefault = `a -> b : ab();\n  a => c : automatically declares entities used in arcs;\n  c =>> c : process(1);\n  b <<= c : Has all mscgen arc types... ;\n  b note b: ...notes + boxes ...;\n  |||;\n  --- : Labels usually don't need enclosing quotes;\n  --- : \"except when they contain , or ;\";\n  ...;\n  `\n\nclass EditorConfig {\n    @observable editor = \"\"\n    @observable mode = 'javascript'\n    @observable theme = 'xcode'\n    @observable fontSize = 14\n    @observable showPrintMargin = false\n    @observable showGutter = true\n    @observable highlightActiveLine = true\n    @observable enableBasicAutocompletion = false\n    @observable enableBasicAutocompletion\n    @observable enableLiveAutocompletion = false\n    @observable enableSnippets = false\n    @observable tabSize = 2\n\n    // Options\n   @observable showLineNumbers = true\n\n    constructor() {\n        this.getStoredState()\n    }\n\n    @action\n    setEditor(value) {\n        this.editor = value\n        localStorage.setItem('editor', value)\n    }\n\n    @action\n    resetEditor() {\n        const inputType = mscConfig.inputType\n        switch(inputType) {\n            case 'msgenny': this.setEditor(msgennyDefault); break;\n            default: this.setEditor(mscDefault); break;\n        }\n    }\n\n    @computed get config() {\n        return {\n            mode: toJS(this.mode),\n            theme: toJS(this.theme),\n            fontSize: toJS(this.fontSize),\n            showPrintMargin: toJS(this.showPrintMargin),\n            showGutter: toJS(this.showGutter),\n            highlightActiveLine: toJS(this.highlightActiveLine),\n            enableBasicAutocompletion: toJS(this.enableBasicAutocompletion),\n            enableLiveAutocompletion: toJS(this.enableLiveAutocompletion),\n            enableSnippets: toJS(this.enableSnippets),\n            tabSize: toJS(this.tabSize),\n        }\n    }\n    @computed get options() {\n        const options = {\n            showLineNumbers: toJS(this.showLineNumbers),\n        }\n        return options\n    }\n\n    @action\n    setConfigValue(name, value) {\n        switch(name) {\n            case 'mode': this.mode = value; break;\n            case 'theme': this.theme = value; break;\n            case 'fontSize': this.fontSize = value; break;\n            case 'showPrintMargin': this.showPrintMargin = value; break;\n            case 'showGutter': this.showGutter = value; break;\n            case 'highlightActiveLine': this.highlightActiveLine = value; break;\n            case 'enableBasicAutocompletion': this.enableBasicAutocompletion = value; break;\n            case 'enableLiveAutocompletion': this.enableLiveAutocompletion = value; break;\n            case 'enableSnippets': this.enableSnippets = value; break;\n            case 'showLineNumbers': this.showLineNumbers = value; break;\n            case 'tabSize': this.tabSize = value; break;\n            default: console.log('Unknown value', value); throw new Error('Unknown value');\n        }\n    }\n\n    @action\n    setConfig(name, value) {\n        try {\n            this.setConfigValue(name,value)\n        } catch(err) {\n            return\n        }\n\n        localStorage.setItem('editor-config', JSON.stringify(this.config))\n        localStorage.setItem('editor-options', JSON.stringify(this.options))\n    }\n\n    getStoredState() {\n        const savedEditor = localStorage.getItem('editor')\n        if(savedEditor !== null) {\n            this.editor = savedEditor\n        }\n\n        const configStr = localStorage.getItem('editor-config')\n        if(configStr !== null) {\n            const config = JSON.parse(configStr)\n            Object.keys(config).forEach(key => {\n                this.setConfigValue(key, config[key])\n            })\n        }\n        const optionsStr = localStorage.getItem('editor-options')\n        if(optionsStr !== null) {\n            const options = JSON.parse(optionsStr)\n            Object.keys(options).forEach(key => {\n                this.setConfigValue(key, options[key])\n            })\n        }\n    }\n\n    /**\n     * Save the rendered SVG to a file.\n     * The extension will match the script type.\n     * If a name is provided, the file is saved as `${name}.${type}`\n     * If no name is provided, the current time stamp is used.\n     */\n    saveToFile(name) {\n        const payload = editorConfig.editor\n        const blob = new Blob([payload], {\n          type: \"text/plain;charset=utf-8\"\n        });\n        // Save the blob to a local file\n        const ext = mscConfig.fileType()\n        const fileName = Boolean(name) ? `${name}.${ext}` : `${Math.floor(Date.now() / 1000)}.${ext}`\n        saveAs(blob, `${Math.floor(Date.now() / 1000)}.${ext}`);\n      }\n\n      openFile(file, onClose) {\n          if(!Boolean(file)){\n              if(Boolean(onClose)){\n                  onClose()\n              }\n              console.log('Error: No filename to open')\n              return\n          }\n\n        const fileReader = new FileReader()\n        fileReader.onloadend = (e) => {\n            const content = fileReader.result\n            const ext =  parsePath(file.name).ext.slice(1)\n            mscConfig.setError(null)\n            mscConfig.setSvg(null)\n            mscConfig.setConfig('inputType', ext)\n            this.setEditor(content)\n            onClose(file);\n          }\n\n        try {\n          fileReader.readAsText(file)\n        } catch (error) {\n          console.log(error)\n        }\n      }\n\n     transpile(outputType, setPreviewInputType) {\n      try {\n        \n        let lResult = require('mscgenjs').translateMsc(\n            this.editor,{inputType: mscConfig.inputType, outputType: outputType })\n        mscConfig.setError(null)\n        mscConfig.setSvg(null)\n        if(Boolean(setPreviewInputType)) {\n            mscConfig.setConfig('inputType', outputType)\n        }\n        this.setEditor(lResult)\n        console.log(lResult);\n      } catch (pError) {\n        console.error(pError);\n      }\n    }\n}\n\nconst editorConfig = new EditorConfig()\nexport default editorConfig","/*\n    Copyright (c) 2020 by David Skyberg\n*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'\nimport {observer} from 'mobx-react'\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/theme-xcode\";\nimport editorConfig from '../store/EditorConfig'\n\nconst styles = theme => ({\n  wrapper: {\n    height: '100%',\n    overflow: 'auto',\n  },\n  errorMarker: {\n    position: 'absolute',\n    background: 'rgba(100,200,100,0.5)',\n    zIndex: 20\n  }\n});\n\n@observer\nclass EditorPane extends React.Component {\n\n    static propTypes = {\n      onChange: PropTypes.func.isRequired,\n      onLoad: PropTypes.func,\n      markers: PropTypes.array,\n      error: PropTypes.object,\n    }\n\n    static defaultProps = {\n      error: null,\n      markers: null,\n    }\n\n    makeMarkers = (classes, error) => {\n      if(!(Boolean(error) && Boolean(error.location)) ) {\n        return []\n      }\n\n      return [{\n        startRow: error.location.start.line - 1,\n        startCol: error.location.start.column - 1,\n        endRow: error.location.end.line - 1,\n        endCol: error.location.end.column - 1,\n        className: classes.errorMarker,\n      }]\n\n    }\n\n    render() {\n    const {onChange, onLoad, classes, error} = this.props\n    const content = editorConfig.editor\n    const options = editorConfig.options\n    const config = editorConfig.config\n    const markers = this.makeMarkers(classes, error)\n    return (\n        <div  className={classes.wrapper}>\n          <AceEditor width=\"1200\" height=\"100%\" maxLines={Infinity} onChange={ onChange } onLoad={onLoad} value={ content } markers={ markers } setOptions={ options } {...config}/>\n        </div>\n    )\n  }\n}\nexport default withStyles(styles)(EditorPane)\n","export default function getViewportSize(w) {\n\n    // Use the specified window or the current window if no argument\n    w = w || window;\n\n    // This works for all browsers except IE8 and before\n    if (w.innerWidth != null) return { width: w.innerWidth, height: w.innerHeight };\n\n    // For IE (or any browser) in Standards mode\n    var d = w.document;\n    if (document.compatMode == \"CSS1Compat\")\n        return {\n            width: d.documentElement.clientWidth,\n            height: d.documentElement.clientHeight\n        };\n\n    // For browsers in Quirks mode\n    return { width: d.body.clientWidth, height: d.body.clientHeight };\n\n}","/*\n    Copyright (c) 2020 by David Skyberg\n*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport mscConfig from '../store/MSC_Config'\nimport editorConfig from '../store/EditorConfig'\nimport getViewportSize from '../util/getViewportSize'\n\n\nfunction localRenderPreview(onError) {\n    const config = mscConfig.config\n    const script = editorConfig.editor\n    document.getElementById('__svg').innerHTML = ''\n    require('mscgenjs').renderMsc(\n        script,\n        config,\n        (pError, pSuccess) => {\n            if (Boolean(pError)) {\n                mscConfig.setSvg(null)\n                mscConfig.setError(pError)\n                if(onError){\n                    onError(pError)\n                }\n                return;\n            }\n            if (Boolean(pSuccess)) {\n                // pSuccess holds the svg\n                mscConfig.setError(null)\n                mscConfig.setSvg(pSuccess)\n                return;\n            }\n            console.log('Wat! Error nor success?');\n        }\n    );\n}\nexport function renderPreview(onError) {\n    if(mscConfig.autoRender){\n        localRenderPreview(onError)\n    }\n}\n\n\nconst styles = theme => ({\n    svg_wrapper: {\n        // Total hack that is NOT responsive.  But solves the problem now\n        // of making the wrapper scrollable.\n        height: getViewportSize().height-64,\n        overflow: 'auto',\n    },\n    svg: {\n        display: 'block',\n        boxSizing: 'inherit',\n    },\n    error: {\n        padding: theme.spacing(2)\n    }\n});\n\n@withStyles(styles)\n@observer\nclass PreviewPane extends React.Component {\n    static propTypes = {\n        onError: PropTypes.func.isRequired\n    }\n\n    componentDidMount() {\n        localRenderPreview(this.props.onError)\n    }\n\n    displayError = (error) => {\n        if (!Boolean(error)) {\n            return null\n        }\n        const name = Boolean(error.name) ? error.name : 'No name'\n        const message = Boolean(error.message) ? error.message : 'No message'\n        const startLine = Boolean(error.location) ? error.location.start.line : 'Unknown'\n        return (\n            <Paper className={ this.props.classes.error }>\n              <Typography variant=\"h4\">\n                { name }\n              </Typography>\n              <Typography>Line:\n                { startLine }\n              </Typography>\n              <Typography>\n                { message }\n              </Typography>\n            </Paper>\n        )\n    }\n\n    handleRenderClicked = (event) => {\n        event.stopPropagation()\n        if(!mscConfig.autoRender){\n            localRenderPreview(this.props.onError)\n        }\n    }\n\n    render() {\n        const {classes} = this.props\n        const error = mscConfig.error\n        const errorState = Boolean(error)\n        return (\n            <div id=\"svg_wrapper\" className={ classes.svg_wrapper } onClick={this.handleRenderClicked}>\n              <div hidden={ errorState } id=\"__svg\" ></div>\n              { this.displayError(error) }\n            </div>\n        )\n    }\n}\nexport default PreviewPane\n/*\n*/","/*\n    Copyright (c) 2020 by David Skyberg\n*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button'\nimport editorConfig from '../store/EditorConfig'\n\n\nexport default function OpenFileDialog(props) {\n  const {onClose, open} = props;\n\n\n  const handleClose = (event) => {\n    onClose(null);\n  };\n\n\n  const handleChange = (event) => {\n    editorConfig.openFile(event.target.files[0], onClose)\n  }\n\n\n  return (\n    <Dialog onClose={ handleClose } aria-labelledby=\"simple-dialog-title\" open={ open }>\n      <DialogTitle id=\"simple-dialog-title\">Open an MSCGen file</DialogTitle>\n      <Button component=\"label\">\n        <input id=\"dialog-file-input\" type=\"file\" onChange={ handleChange } style={{ display: 'none' }}/>\n        Upload a File\n      </Button>\n    </Dialog>\n    );\n}\n\nOpenFileDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n\n\n","/*\n    Copyright (c) 2020 by David Skyberg\n*/\nimport React from 'react';\nimport PropTypes from 'prop-types'\nimport NumberFormat from 'react-number-format';\nimport {observer} from 'mobx-react'\nimport {withStyles} from '@material-ui/core/styles'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField'\nimport Switch from '@material-ui/core/Switch';\n\nimport editorConfig from '../store/EditorConfig'\nimport mscConfig from '../store/MSC_Config'\n\nconst styles = theme => ({\n    dialogContent: {\n        display: 'flex'\n    },\n    formControl: {\n        margin: theme.spacing(1)\n    },\n    selectFormControl: {\n        margin: theme.spacing(1),\n        minWidth: 120\n    }\n});\n\nfunction NumberFormatCustom(props) {\n    const {\n        inputRef,\n        onChange,\n        ...other\n    } = props;\n\n    return (<NumberFormat\n        {...other}\n        getInputRef={inputRef}\n        onValueChange={values => {\n        onChange({\n            target: {\n                value: values.value\n            }\n        });\n    }}\n        thousandSeparator\n        isNumericString/>);\n}\n\nNumberFormatCustom.propTypes = {\n    inputRef: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired\n};\n\n@withStyles(styles)\n@observer\nclass SettingsDialog extends React.Component {\n\n    \n\n    handleChange = (config, name, elType) => event => {\n        const t = event.target\n        switch(elType) {\n            case 'switch': config.setConfig(name, t.checked); break;\n            case 'number': config.setConfig(name, parseInt(t.value, 10)); break;\n            default: config.setConfig(name, t.value); break;\n        }\n    }\n\n\n    render() {\n        const {open, onClose, classes} = this.props\n\n        return (\n            <Dialog open={open} onClose={onClose} scroll=\"paper\">\n                <DialogTitle id=\"settings-dialog-title\">Settings</DialogTitle>\n                <DialogContent dividers={true}>\n                    <div className={classes.dialogContent}>\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\n                            <FormLabel component=\"legend\">Editor Settings</FormLabel>\n                            <FormGroup>\n                                <FormControl className={classes.formControl}>\n                                    <TextField\n                                        label=\"Font Size\"\n                                        value={editorConfig.fontSize}\n                                        onChange={this.handleChange(editorConfig,'fontSize', 'number')}\n                                        id=\"editor-fontSize\"\n                                        InputProps={{\n                                        inputComponent: NumberFormatCustom\n                                    }}/>\n                                </FormControl>\n                                <FormControl className={classes.formControl}>\n                                    <TextField\n                                        label=\"Tab Size\"\n                                        value={editorConfig.tabSize}\n                                        onChange={this.handleChange(editorConfig, 'tabSize', 'number')}\n                                        id=\"editor-tabSize\"\n                                        InputProps={{\n                                        inputComponent: NumberFormatCustom\n                                    }}/>\n                                </FormControl>\n                                <FormControl className={classes.formControl}>\n                                    <InputLabel id=\"editor-mode-label\">Mode</InputLabel>\n                                    <Select\n                                        labelId=\"editor-mode-label\"\n                                        id=\"editor-mode\"\n                                        value={editorConfig.mode}\n                                        onChange={this.handleChange(editorConfig,'mode','select')}>\n                                        <MenuItem value={'java'}>java</MenuItem>\n                                        <MenuItem value={'javascript'}>javascript</MenuItem>\n                                        <MenuItem value={'json'}>json</MenuItem>\n                                    </Select>\n                                </FormControl>\n                                <FormControl className={classes.formControl}>\n                                    <InputLabel id=\"editor-theme-label\">Theme</InputLabel>\n                                    <Select\n                                        labelId=\"editor-theme-label\"\n                                        id=\"editor-theme\"\n                                        value={editorConfig.theme}\n                                        onChange={this.handleChange(editorConfig,'theme','select')}>\n                                        <MenuItem value={'ambiance'}>ambiance</MenuItem>\n                                        <MenuItem value={'chaos'}>chaos</MenuItem>\n                                        <MenuItem value={'chrome'}>chrome</MenuItem>\n                                        <MenuItem value={'clouds'}>clouds</MenuItem>\n                                        <MenuItem value={'clouds_midnight'}>clouds_midnight</MenuItem>\n                                        <MenuItem value={'cobalt'}>cobalt</MenuItem>\n                                        <MenuItem value={'crimson_editor'}>crimson_editor</MenuItem>\n                                        <MenuItem value={'dawn'}>dawn</MenuItem>\n                                        <MenuItem value={'dracula'}>dracula</MenuItem>\n                                        <MenuItem value={'dreamweaver'}>dreamweaver</MenuItem>\n                                        <MenuItem value={'eclipse'}>eclipse</MenuItem>\n                                        <MenuItem value={'github'}>github</MenuItem>\n                                        <MenuItem value={'gob'}>gob</MenuItem>\n                                        <MenuItem value={'gruvbox'}>gruvbox</MenuItem>\n                                        <MenuItem value={'idle_fingers'}>idle_fingers</MenuItem>\n                                        <MenuItem value={'iplastic'}>iplastic</MenuItem>\n                                        <MenuItem value={'katzenmilch'}>katzenmilch</MenuItem>\n                                        <MenuItem value={'monokai'}>monokai</MenuItem>\n                                        <MenuItem value={'xcode'}>xcode</MenuItem>\n                                    </Select>\n                                </FormControl>\n                                <FormControlLabel\n                                    label=\"Show print margin\"\n                                    labelPlacement=\"start\"\n                                    control={< Switch id = \"editor-showPrintMargin\" checked = {\n                                    editorConfig.showPrintMargin\n                                }\n                                onChange = {\n                                    this.handleChange(editorConfig,'showPrintMargin','switch')\n                                }\n                                value = \"showPrintMargin\" inputProps = {{ 'aria-label': 'secondary checkbox' }}/>}/>\n                                <FormControlLabel\n                                    label=\"Show gutter\"\n                                    labelPlacement=\"start\"\n                                    control={< Switch id = \"editor-showGutter\" checked = {\n                                    editorConfig.showGutter\n                                }\n                                onChange = {\n                                    this.handleChange(editorConfig,'showGutter','switch')\n                                }\n                                value = \"showGutter\" inputProps = {{ 'aria-label': 'secondary checkbox' }}/>}/>\n                                <FormControlLabel\n                                    label=\"Highlight active line\"\n                                    labelPlacement=\"start\"\n                                    control={< Switch id = \"editor-highlightaActiveLine\" checked = {\n                                    editorConfig.highlightActiveLine\n                                }\n                                onChange = {\n                                    this.handleChange(editorConfig,'highlightActiveLine','switch')\n                                }\n                                value = \"highlightActiveLine\" inputProps = {{ 'aria-label': 'secondary checkbox' }}/>}/>\n                                <FormControlLabel\n                                    label=\"Basic autocomplete\"\n                                    labelPlacement=\"start\"\n                                    control={< Switch id = \"editor-enableBasicAutocompletion\" checked = {\n                                    editorConfig.enableBasicAutocompletion\n                                }\n                                onChange = {\n                                    this.handleChange(editorConfig,'enableBasicAutocompletion','switch')\n                                }\n                                value = \"enableBasicAutocompletion\" inputProps = {{ 'aria-label': 'secondary checkbox' }}/>}/>\n                                <FormControlLabel\n                                    label=\"Live autocomplete\"\n                                    labelPlacement=\"start\"\n                                    control={< Switch id = \"editor-enableLiveAutocompletion\" checked = {\n                                    editorConfig.enableLiveAutocompletion\n                                }\n                                onChange = {\n                                    this.handleChange(editorConfig,'enableLiveAutocompletion','switch')\n                                }\n                                value = \"enableLiveAutocompletion\" inputProps = {{ 'aria-label': 'secondary checkbox' }}/>}/>\n                                <FormControlLabel\n                                    label=\"Enable snippets\"\n                                    labelPlacement=\"start\"\n                                    control={< Switch id = \"editor-enableSnippets\" checked = {\n                                    editorConfig.enableSnippets\n                                }\n                                onChange = {\n                                    this.handleChange(editorConfig,'enableSnippets','switch')\n                                }\n                                value = \"enableSnippets\" inputProps = {{ 'aria-label': 'secondary checkbox' }}/>}/>\n                                <FormControlLabel\n                                    label=\"Show line numbers\"\n                                    labelPlacement=\"start\"\n                                    control={< Switch id = \"editor-showLineNumbers\" checked = {\n                                    editorConfig.showLineNumbers\n                                }\n                                onChange = {\n                                    this.handleChange(editorConfig,'showLineNumbers','switch')\n                                }\n                                value = \"showLineNumbers\" inputProps = {{ 'aria-label': 'secondary checkbox' }}/>}/>\n                            </FormGroup>\n                        </FormControl>\n                        <FormControl component=\"fieldset\" className={classes.formControl}>\n                            <FormLabel component=\"legend\">Preview Settings</FormLabel>\n                            <FormGroup>\n                                <FormControl className={classes.formControl}>\n                                    <InputLabel id=\"msc-inputType-label\">Input type</InputLabel>\n                                    <Select\n                                        labelId=\"msc-inputType-label\"\n                                        id=\"msc-inputType\"\n                                        value={mscConfig.inputType}\n                                        onChange={this.handleChange(mscConfig,'inputType','select')}>\n                                        <MenuItem value={'mscgen'}>mscgen</MenuItem>\n                                        <MenuItem value={'msgenny'}>msgenny</MenuItem>\n                                        <MenuItem value={'xu'}>xu</MenuItem>\n                                        <MenuItem value={'json'}>json</MenuItem>\n                                    </Select>\n                                </FormControl>\n                                <FormControl className={classes.formControl}>\n                                    <InputLabel id=\"msc-additionalTemplate-label\">Additional template</InputLabel>\n                                    <Select\n                                        labelId=\"msc-additionalTemplate-label\"\n                                        id=\"msc-additionalTemplate\"\n                                        value={mscConfig.additionalTemplate}\n                                        onChange={this.handleChange(mscConfig,'additionalTemplate','select')}>\n                                        <MenuItem value={'lazy'}>lazy</MenuItem>\n                                        <MenuItem value={'classic'}>classic</MenuItem>\n                                        <MenuItem value={'empty'}>empty</MenuItem>\n                                    </Select>\n                                </FormControl>\n                                <FormControl className={classes.formControl}>\n                                    <InputLabel id=\"msc-regularArcTextVerticalAlignment-label\">Text alignment</InputLabel>\n                                    <Select\n                                        labelId=\"msc-regularArcTextVerticalAlignment-label\"\n                                        id=\"msc-regularArcTextVerticalAlignment\"\n                                        value={mscConfig.regularArcTextVerticalAlignment}\n                                        onChange={this.handleChange(mscConfig,'regularArcTextVerticalAlignment','select')}>\n                                        <MenuItem value={'above'}>above</MenuItem>\n                                        <MenuItem value={'middle'}>middle</MenuItem>\n                                        <MenuItem value={'below'}>below</MenuItem>\n                                    </Select>\n                                </FormControl>\n\n                                <FormControlLabel\n                                    label=\"Mirror entities\"\n                                    labelPlacement=\"start\"\n                                    control={< Switch id = \"msc-mirrorEntitiesOnBottom\" checked = {\n                                    mscConfig.mirrorEntitiesOnBottom\n                                }\n                                onChange = {\n                                    this.handleChange(mscConfig, 'mirrorEntitiesOnBottom', 'switch')\n                                }\n                                value = \"mirrorEntitiesOnBottom\" inputProps = {{ 'aria-label': 'secondary checkbox' }}/>}/>\n\n                                <FormControlLabel\n                                    label=\"Auto Render\"\n                                    labelPlacement=\"start\"\n                                    control={< Switch id = \"msc-autoRender\" checked = {\n                                    mscConfig.autoRender\n                                }\n                                onChange = {\n                                    this.handleChange(mscConfig, 'autoRender', 'switch')\n                                }\n                                value = \"autoRender\" inputProps = {{ 'aria-label': 'secondary checkbox' }}/>}/>\n\n                                <FormControlLabel\n                                    label=\"Include source\"\n                                    labelPlacement=\"start\"\n                                    control={< Switch id = \"msc-includeSource\" checked = {\n                                    mscConfig.includeSource\n                                }\n                                onChange = {\n                                    this.handleChange(mscConfig,'includeSource','switch')\n                                }\n                                value = \"includeSource\" inputProps = {{ 'aria-label': 'secondary checkbox' }}/>}/>\n\n                            </FormGroup>\n                        </FormControl>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={onClose} color=\"primary\">\n                        Done\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n}\nexport default SettingsDialog\n","/*\n    Copyright (c) 2020 by David Skyberg\n*/\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles'\nimport SplitPane from 'react-split-pane'\nimport {drawerWidth} from './AppDrawer'\nimport getViewportSize from '../util/getViewportSize'\n\n\n\nconst styles = makeStyles(theme => ({\n  splitPane: {\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    overflow: 'hidden',\n  },\n  splitPaneClose: {\n    overflow: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(9),\n    },\n  }\n}))\n\n\nconst Splitter = (props) => {\n    const {open} = props\n    const classes = styles()\n    const savedSplitPos = localStorage.getItem('splitPos')\n    let splitPos\n    if( savedSplitPos === null ){\n      splitPos = 500\n    } else {\n      splitPos = parseInt(savedSplitPos, 10)\n    }\n\n    return (\n            <SplitPane className={clsx(classes.splitPane, !open && classes.splitPaneClose)}\n              split=\"vertical\"\n              defaultSize={splitPos} primary=\"second\"\n              onChange={ size => localStorage.setItem('splitPos', Math.floor(size)) }>\n                {props.children}\n            </SplitPane>\n    )\n}\nexport default Splitter\n\n","/*\n    Copyright (c) 2020 by David Skyberg\n*/\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction Action(props) {\n    const {onClose} = props\n    return (\n        <React.Fragment>\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={ onClose }>\n                <CloseIcon fontSize=\"small\" />\n            </IconButton>\n         </React.Fragment>\n    )\n}\n\nexport default function Message(props) {\n    const {message, open, onClose} = props\n    return (\n        <Snackbar anchorOrigin={ { vertical: 'bottom', horizontal: 'left', } } open={ open } autoHideDuration={ 6000 } onClose={ onClose } message={ message }\n        action={ <Action onClose={ onClose }/> }\n        />\n\n    )\n}\n","/*\n    Copyright (c) 2020 by David Skyberg\n*/\nimport React from 'react';\nimport withRoot from './style/withRoot'\nimport { withStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container';\nimport AppHeader from './components/AppHeader'\nimport AppDrawer from './components/AppDrawer';\nimport EditorPane from './components/EditorPane'\nimport PreviewPane, { renderPreview } from './components/PreviewPane'\nimport OpenFileDialog from './components/OpenFileDialog'\nimport SettingsDialog from './components/SettingsDialog'\nimport Splitter from './components/Splitter'\nimport Message from './components/Message'\n\nimport mscConfig from './store/MSC_Config'\nimport editorConfig from './store/EditorConfig'\nimport getViewportSize from './util/getViewportSize'\n\nconst styles = theme => ({\n  root: {\n    height: getViewportSize(window).height,\n    display: 'flex',\n    overflow: 'hidden',\n  },\n  container: {\n    height: getViewportSize(window).height - 64,\n    maxHeight: getViewportSize(window).height - 64,\n    position: 'absolute',\n    top: 64,\n    overflow: 'hidden',\n    width: '100%',\n    maxWidth: '100%',\n    padding: 0,\n  },\n  splitPane: {\n    marginLeft: 64,\n    height: '100%',\n  },\n});\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      drawerOpen: false,\n      snackbarOpen: false,\n      openFileDialogOpen: false,\n      settingsDialogOpen: false,\n    }\n\n  }\n\n  handleSettingsClick = () => {\n    this.setState({\n      settingsDialogOpen: true\n    })\n  }\n\n  handleSettingsClosed = () => {\n    this.setState({\n      settingsDialogOpen: false\n    })\n  }\n\n  handleDrawerOpen = () => {\n    this.setState({\n      drawerOpen: true\n    })\n  };\n  handleDrawerClose = () => {\n    this.setState({\n      drawerOpen: false\n    })\n  };\n\n  handleSnackbarClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    this.setState({\n      snackbarOpen: false,\n      snackbarMsg: \"\"\n    });\n  };\n\n  handleRenderError = (pError) => {\n    this.setState({\n      snackbarMsg: pError.message,\n      snackbarOpen: true,\n    })\n  }\n\n  saveEditorState = (newState) => {\n    editorConfig.setEditor(newState)\n    renderPreview(this.handleRenderError)\n  }\n\n  handleEditorChange = newState => {\n    this.saveEditorState(newState)\n  }\n\n  /**\n   * Drawer item handler\n   * Each icon in the Drawer is handled\n   */\n  handleDrawerItem = (event, item) => {\n    switch(item) {\n      case 'reset': \n        editorConfig.resetEditor();\n        renderPreview(this.handleEditorChange);\n        break;\n      case 'open':\n        this.setState({\n          openFileDialogOpen: true\n        });\n        break;\n       case 'save':\n        editorConfig.saveToFile();\n        mscConfig.saveToFile();\n        break;\n       default:\n        console.log('handleDrawerItem received unknow command', item)\n\n    }\n }\n\n  /**\n   * Once the user selects a file from the dialog popup,\n   * the file is loaded to the editor\n   */\n  handleOpenFile = value => {\n    this.setState({\n      openFileDialogOpen: false\n    })\n    if (value !== null) {\n      renderPreview(this.handleRenderError)}\n  }\n\n  render() {\n    const {classes} = this.props\n    const {drawerOpen, snackbarOpen, snackbarMsg, openFileDialogOpen, settingsDialogOpen} = this.state\n    const content = editorConfig.editor\n    const error = mscConfig.error\n\n    return (\n      <div className={ classes.root }>\n        <AppHeader title=\"MSCGen\" onDrawerClick={ this.handleDrawerOpen } open={ drawerOpen } onSettingsClick={ this.handleSettingsClick } />\n        <AppDrawer open={ drawerOpen } onClose={ this.handleDrawerClose } onClick={ this.handleDrawerItem } />\n        <Container className={ classes.container }>\n          <Splitter open={ drawerOpen }>\n            <EditorPane onChange={ this.handleEditorChange } content={ content } error={ error } />\n            <PreviewPane onError={ this.handleRenderError } />\n          </Splitter>\n        </Container>\n        <OpenFileDialog open={ openFileDialogOpen } onClose={ this.handleOpenFile } />\n        <SettingsDialog open={ settingsDialogOpen } onClose={ this.handleSettingsClosed } />\n        <Message open={ snackbarOpen } onClose={ this.handleSnackbarClose } message={ snackbarMsg } />\n      </div>\n    )\n  };\n}\nexport default withRoot(withStyles(styles)(App));\n","/*\n    Copyright (c) 2020 by David Skyberg\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport App from './App';\n\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();"],"sourceRoot":""}